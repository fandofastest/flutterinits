// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'model/videomodel.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 916659392605459963),
      name: 'VideoModel',
      lastPropertyId: const IdUid(12, 851798700339414108),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 1571568648351545907),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 38375422065871864),
            name: 'title',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 4117784239704214289),
            name: 'channelId',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 2627759360692512983),
            name: 'channelTitle',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 901592396182023474),
            name: 'description',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 175879500542409094),
            name: 'videoId',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(7, 6435427994168745017),
            name: 'publishedAt',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(8, 1996565135190512272),
            name: 'viewCount',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(9, 1802107043201609030),
            name: 'duration',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(10, 4907802027937196967),
            name: 'recentPlayed',
            type: 10,
            flags: 0),
        ModelProperty(
            id: const IdUid(11, 200262698236146816),
            name: 'recentliked',
            type: 10,
            flags: 0),
        ModelProperty(
            id: const IdUid(12, 851798700339414108),
            name: 'isfav',
            type: 1,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 916659392605459963),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    VideoModel: EntityDefinition<VideoModel>(
        model: _entities[0],
        toOneRelations: (VideoModel object) => [],
        toManyRelations: (VideoModel object) => {},
        getId: (VideoModel object) => object.id,
        setId: (VideoModel object, int id) {
          object.id = id;
        },
        objectToFB: (VideoModel object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final channelIdOffset = fbb.writeString(object.channelId);
          final channelTitleOffset = fbb.writeString(object.channelTitle);
          final descriptionOffset = fbb.writeString(object.description);
          final videoIdOffset = fbb.writeString(object.videoId);
          final publishedAtOffset = fbb.writeString(object.publishedAt);
          final viewCountOffset = fbb.writeString(object.viewCount);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, channelIdOffset);
          fbb.addOffset(3, channelTitleOffset);
          fbb.addOffset(4, descriptionOffset);
          fbb.addOffset(5, videoIdOffset);
          fbb.addOffset(6, publishedAtOffset);
          fbb.addOffset(7, viewCountOffset);
          fbb.addInt64(8, object.duration);
          fbb.addInt64(9, object.recentPlayed?.millisecondsSinceEpoch);
          fbb.addInt64(10, object.recentliked?.millisecondsSinceEpoch);
          fbb.addBool(11, object.isfav);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final recentPlayedValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 22);
          final recentlikedValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 24);
          final object = VideoModel(
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, ''),
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 18, ''))
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..recentPlayed = recentPlayedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(recentPlayedValue)
            ..recentliked = recentlikedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(recentlikedValue)
            ..isfav =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 26, false);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [VideoModel] entity fields to define ObjectBox queries.
class VideoModel_ {
  /// see [VideoModel.id]
  static final id =
      QueryIntegerProperty<VideoModel>(_entities[0].properties[0]);

  /// see [VideoModel.title]
  static final title =
      QueryStringProperty<VideoModel>(_entities[0].properties[1]);

  /// see [VideoModel.channelId]
  static final channelId =
      QueryStringProperty<VideoModel>(_entities[0].properties[2]);

  /// see [VideoModel.channelTitle]
  static final channelTitle =
      QueryStringProperty<VideoModel>(_entities[0].properties[3]);

  /// see [VideoModel.description]
  static final description =
      QueryStringProperty<VideoModel>(_entities[0].properties[4]);

  /// see [VideoModel.videoId]
  static final videoId =
      QueryStringProperty<VideoModel>(_entities[0].properties[5]);

  /// see [VideoModel.publishedAt]
  static final publishedAt =
      QueryStringProperty<VideoModel>(_entities[0].properties[6]);

  /// see [VideoModel.viewCount]
  static final viewCount =
      QueryStringProperty<VideoModel>(_entities[0].properties[7]);

  /// see [VideoModel.duration]
  static final duration =
      QueryIntegerProperty<VideoModel>(_entities[0].properties[8]);

  /// see [VideoModel.recentPlayed]
  static final recentPlayed =
      QueryIntegerProperty<VideoModel>(_entities[0].properties[9]);

  /// see [VideoModel.recentliked]
  static final recentliked =
      QueryIntegerProperty<VideoModel>(_entities[0].properties[10]);

  /// see [VideoModel.isfav]
  static final isfav =
      QueryBooleanProperty<VideoModel>(_entities[0].properties[11]);
}
